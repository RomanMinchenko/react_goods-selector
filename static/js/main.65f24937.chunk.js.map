{"version":3,"sources":["Components/Title.tsx","Components/MediaContent.tsx","Components/AllGoodsList.tsx","Components/SelectedGoodsList.tsx","Components/Lists.tsx","App.tsx","index.tsx"],"names":["Title","width","height","version","xmlns","id","attributeName","from","to","dur","begin","fill","repeatCount","fontSize","href","MediaContent","state","volume","this","autoPlay","loop","src","kind","className","muted","type","onClick","setState","React","Component","AllGoodsList","props","goodsList","selectedGoods","selectGoods","map","all","toLocaleUpperCase","some","selected","SelectedGoodsList","clearList","removeGood","length","index","Lists","selectGood","good","newState","push","splice","findIndex","item","goodsFromServer","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.65f24937.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Title: React.FC = () => (\n  <svg\n    width=\"100%\"\n    height=\"100px\"\n    version=\"1.1\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path id=\"path\">\n      <animate\n        attributeName=\"d\"\n        from=\"m550,60 h0\"\n        to=\"m550,60 h1100\"\n        dur=\"3s\"\n        begin=\"4.5s\"\n        fill=\"freeze\"\n        repeatCount=\"1\"\n      />\n    </path>\n    <text fontSize=\"38px\">\n      <textPath href=\"#path\">\n        CHOOSE YOUR GOODS\n      </textPath>\n    </text>\n  </svg>\n);\n","import React from 'react';\n\ntype Props = {};\ntype State = {\n  volume: boolean;\n};\n\nexport class MediaContent extends React.Component<Props, State> {\n  state = {\n    volume: false,\n  };\n\n  render() {\n    const { volume } = this.state;\n\n    return (\n      <>\n        <audio\n          autoPlay\n          loop\n        >\n          <source src=\"./audio/mortalKombat.mp3\" />\n          <track kind=\"captions\" />\n        </audio>\n        <video\n          className=\"video\"\n          autoPlay\n          muted\n          loop\n        >\n          <source src=\"./video/videoplayback.mp4\" />\n          <track kind=\"captions\" />\n        </video>\n        <button\n          type=\"button\"\n          className={`button button__volume button__volume--${volume ? 'off' : 'on'}`}\n          onClick={() => {\n            this.setState((state) => ({ volume: !state.volume }));\n          }}\n        >\n          {' '}\n        </button>\n      </>\n    );\n  }\n}\n","import React from 'react';\n\ntype Props = {\n  goodsList: string[];\n  selectedGoods: string[];\n  selectGoods(all: string): void;\n};\n\nexport const AllGoodsList: React.FC<Props> = (props) => {\n  const { goodsList, selectedGoods, selectGoods } = props;\n\n  return (\n    <ul className=\"lists__all list\">\n      {goodsList.map(all => (\n        <li key={all} className=\"list__all\">\n          {all.toLocaleUpperCase()}\n          {\n            !selectedGoods.some(selected => selected === all)\n                && (\n                  <button\n                    type=\"button\"\n                    className=\"button button__add\"\n                    onClick={() => {\n                      selectGoods(all);\n                    }}\n                  >\n                    {' '}\n                  </button>\n                )\n          }\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  selectedGoods: string[];\n  clearList(): void;\n  removeGood(selected: string): void;\n};\n\nexport const SelectedGoodsList: React.FC<Props> = (props) => {\n  const { selectedGoods, clearList, removeGood } = props;\n\n  return (\n    <div className=\"lists__selected list\">\n      {\n        selectedGoods.length === 0\n          ? <span>NO GOODS SELECTED</span>\n          : (\n            <>\n              {\n                selectedGoods.length === 1\n                  ? (\n                    <span>\n                      {selectedGoods[0].toLocaleUpperCase()}\n                      <button\n                        type=\"button\"\n                        className=\"button button__remove\"\n                        onClick={\n                          () => {\n                            removeGood(selectedGoods[0]);\n                          }\n                        }\n                      >\n                        {' '}\n                      </button>\n                      {' IS SELECTED'}\n                    </span>\n                  )\n                  : (\n                    <>\n                      {selectedGoods.map((selected, index) => {\n                        if (index === selectedGoods.length - 2) {\n                          return (\n                            <span key={selected}>\n                              {selected.toLocaleUpperCase()}\n                              <button\n                                type=\"button\"\n                                className=\"button button__remove\"\n                                onClick={\n                                  () => {\n                                    removeGood(selected);\n                                  }\n                                }\n                              >\n                                {' '}\n                              </button>\n                              {' AND '}\n                            </span>\n                          );\n                        }\n\n                        if (index === selectedGoods.length - 1) {\n                          return (\n                            <span key={selected}>\n                              {selected.toLocaleUpperCase()}\n                              <button\n                                type=\"button\"\n                                className=\"button button__remove\"\n                                onClick={\n                                  () => {\n                                    removeGood(selected);\n                                  }\n                                }\n                              >\n                                {' '}\n                              </button>\n                            </span>\n                          );\n                        }\n\n                        return (\n                          <span key={selected}>\n                            {selected.toLocaleUpperCase()}\n                            <button\n                              type=\"button\"\n                              className=\"button button__remove\"\n                              onClick={\n                                () => {\n                                  removeGood(selected);\n                                }\n                              }\n                            >\n                              {' '}\n                            </button>\n                            {', '}\n                          </span>\n                        );\n                      })}\n                      {' ARE SELECTED'}\n                    </>\n                  )\n              }\n            </>\n          )\n      }\n      <button\n        type=\"button\"\n        className=\"button button__clear\"\n        onClick={\n          () => {\n            clearList();\n          }\n        }\n      >\n        CLEAR ALL\n      </button>\n    </div>\n  );\n};\n","import React from 'react';\nimport { AllGoodsList } from './AllGoodsList';\nimport { SelectedGoodsList } from './SelectedGoodsList';\n\ntype Props = {\n  goodsList: string[];\n};\ntype State = {\n  selectedGoods: string[];\n};\n\nexport class Lists extends React.Component<Props, State> {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  selectGood = (good: string) => {\n    this.setState((state) => {\n      const newState = state.selectedGoods;\n\n      newState.push(good);\n\n      return ({ selectedGoods: newState });\n    });\n  };\n\n  clearList = () => {\n    this.setState({ selectedGoods: [] });\n  };\n\n  removeGood = (good: string) => {\n    this.setState((state) => {\n      const newState = state.selectedGoods;\n\n      newState.splice(newState.findIndex(item => item === good), 1);\n\n      return ({ selectedGoods: newState });\n    });\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n    const { goodsList } = this.props;\n\n    return (\n      <div className=\"lists\">\n        <AllGoodsList\n          goodsList={goodsList}\n          selectedGoods={selectedGoods}\n          selectGoods={this.selectGood}\n        />\n        <SelectedGoodsList\n          selectedGoods={selectedGoods}\n          clearList={this.clearList}\n          removeGood={this.removeGood}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nimport { Title } from './Components/Title';\nimport { MediaContent } from './Components/MediaContent';\nimport { Lists } from './Components/Lists';\n\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App: React.FC = () => (\n  <div className=\"App\">\n    <Title />\n    <MediaContent />\n    <Lists goodsList={goodsFromServer} />\n  </div>\n);\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}