{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","volume","this","className","width","height","version","xmlns","id","attributeName","from","to","dur","begin","fill","repeatCount","fontSize","href","autoPlay","muted","src","kind","type","onClick","setState","map","all","toLocaleUpperCase","some","selected","newState","push","length","index","React","Component","ReactDOM","render","document","getElementById"],"mappings":"8OAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAUIC,E,4MACJC,MAAQ,CACNC,cAAe,CAAC,OAChBC,QAAQ,G,4CAGV,WAAU,IAAD,OACP,EAAkCC,KAAKH,MAA/BC,EAAR,EAAQA,cAAeC,EAAvB,EAAuBA,OAEvB,OACE,sBAAKE,UAAU,MAAf,UACE,sBACEC,MAAM,OACNC,OAAO,QACPC,QAAQ,MACRC,MAAM,6BAJR,UAME,sBAAMC,GAAG,OAAT,SACE,yBACEC,cAAc,IACdC,KAAK,aACLC,GAAG,gBACHC,IAAI,KACJC,MAAM,OACNC,KAAK,SACLC,YAAY,QAGhB,sBAAMC,SAAS,OAAf,SACE,0BAAUC,KAAK,QAAf,oCAKJ,wBACEd,UAAU,QACVe,UAAQ,EACRC,OAAK,EAHP,UAKE,wBAAQC,IAAI,8BACZ,uBAAOC,KAAK,gBAEd,wBACEH,UAAQ,EACRC,MAAOlB,EAFT,UAIE,wBAAQmB,IAAI,6BACZ,uBAAOC,KAAK,gBAEd,wBACEC,KAAK,SACLnB,UAAS,gDAA2CF,EAAS,MAAQ,MACrEsB,QAAS,WACP,EAAKC,UAAS,SAACzB,GAAD,MAAY,CAAEE,QAASF,EAAME,YAJ/C,SAOG,MAEH,sBAAKE,UAAU,QAAf,UACE,oBAAIA,UAAU,kBAAd,SACGN,EAAgB4B,KAAI,SAAAC,GAAG,OACtB,qBAAcvB,UAAU,YAAxB,UACGuB,EAAIC,qBAEF3B,EAAc4B,MAAK,SAAAC,GAAQ,OAAIA,IAAaH,MAEzC,wBACEJ,KAAK,SACLnB,UAAU,qBACVoB,QAAS,kBACP,EAAKC,UAAS,SAACzB,GACb,IAAM+B,EAAW/B,EAAMC,cAIvB,OAFA8B,EAASC,KAAKL,GAEN,CAAE1B,cAAe8B,OAT/B,SAaG,QAlBFJ,QAyBb,sBAAKvB,UAAU,uBAAf,UAE6B,IAAzBH,EAAcgC,OACV,qDAEA,mCAE6B,IAAzBhC,EAAcgC,OAEV,iCACGhC,EAAc,GAAG2B,oBACjB,kBAIH,qCACG3B,EAAcyB,KAAI,SAACI,EAAUI,GAC5B,OAAIA,IAAUjC,EAAcgC,OAAS,EAEjC,iCACGH,EAASF,oBACT,UAFQE,GAOXI,IAAUjC,EAAcgC,OAAS,EAEjC,+BACGH,EAASF,qBADDE,GAOb,iCACGA,EAASF,oBACT,OAFQE,MAMd,qBAOjB,wBACEP,KAAK,SACLnB,UAAU,uBACVoB,QAAS,kBACP,EAAKC,SAAS,CAAExB,cAAe,MAJnC,oC,GAtIMkC,IAAMC,WAsJTrC,IC1KfsC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.10eda648.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype Props = {};\n\ntype State = {\n  selectedGoods: string[];\n  volume: boolean;\n};\n\nclass App extends React.Component<Props, State> {\n  state = {\n    selectedGoods: ['Jam'],\n    volume: false,\n  };\n\n  render() {\n    const { selectedGoods, volume } = this.state;\n\n    return (\n      <div className=\"App\">\n        <svg\n          width=\"100%\"\n          height=\"100px\"\n          version=\"1.1\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path id=\"path\">\n            <animate\n              attributeName=\"d\"\n              from=\"m550,60 h0\"\n              to=\"m550,60 h1100\"\n              dur=\"3s\"\n              begin=\"4.5s\"\n              fill=\"freeze\"\n              repeatCount=\"1\"\n            />\n          </path>\n          <text fontSize=\"38px\">\n            <textPath href=\"#path\">\n              CHOOSE YOUR GOODS\n            </textPath>\n          </text>\n        </svg>\n        <video\n          className=\"video\"\n          autoPlay\n          muted\n        >\n          <source src=\"./video/videoplayback.mp4\" />\n          <track kind=\"captions\" />\n        </video>\n        <audio\n          autoPlay\n          muted={volume}\n        >\n          <source src=\"./audio/mortalKombat.mp3\" />\n          <track kind=\"captions\" />\n        </audio>\n        <button\n          type=\"button\"\n          className={`button button__volume button__volume--${volume ? 'off' : 'on'}`}\n          onClick={() => {\n            this.setState((state) => ({ volume: !state.volume }));\n          }}\n        >\n          {' '}\n        </button>\n        <div className=\"lists\">\n          <ul className=\"lists__all list\">\n            {goodsFromServer.map(all => (\n              <li key={all} className=\"list__all\">\n                {all.toLocaleUpperCase()}\n                {\n                  !selectedGoods.some(selected => selected === all)\n                    && (\n                      <button\n                        type=\"button\"\n                        className=\"button button__add\"\n                        onClick={() => (\n                          this.setState((state) => {\n                            const newState = state.selectedGoods;\n\n                            newState.push(all);\n\n                            return ({ selectedGoods: newState });\n                          })\n                        )}\n                      >\n                        {' '}\n                      </button>\n                    )\n                }\n              </li>\n            ))}\n          </ul>\n          <div className=\"lists__selected list\">\n            {\n              selectedGoods.length === 0\n                ? <span>NO GOODS SELECTED</span>\n                : (\n                  <>\n                    {\n                      selectedGoods.length === 1\n                        ? (\n                          <span>\n                            {selectedGoods[0].toLocaleUpperCase()}\n                            {' IS SELECTED'}\n                          </span>\n                        )\n                        : (\n                          <>\n                            {selectedGoods.map((selected, index) => {\n                              if (index === selectedGoods.length - 2) {\n                                return (\n                                  <span key={selected}>\n                                    {selected.toLocaleUpperCase()}\n                                    {' AND '}\n                                  </span>\n                                );\n                              }\n\n                              if (index === selectedGoods.length - 1) {\n                                return (\n                                  <span key={selected}>\n                                    {selected.toLocaleUpperCase()}\n                                  </span>\n                                );\n                              }\n\n                              return (\n                                <span key={selected}>\n                                  {selected.toLocaleUpperCase()}\n                                  {', '}\n                                </span>\n                              );\n                            })}\n                            {' ARE SELECTED'}\n                          </>\n                        )\n                    }\n                  </>\n                )\n            }\n            <button\n              type=\"button\"\n              className=\"button button__clear\"\n              onClick={() => (\n                this.setState({ selectedGoods: [] })\n              )}\n            >\n              CLEAR ALL\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}